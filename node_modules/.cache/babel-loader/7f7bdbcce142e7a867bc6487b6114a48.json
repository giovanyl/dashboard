{"ast":null,"code":"var _jsxFileName = \"/Users/wesley.white/Library/CloudStorage/GoogleDrive-wesley.white@6point6.co.uk/My Drive/Notes/20 - Case Study/Files/Front End Dev Environment/dashboard/src/components/data table.js\",\n    _s = $RefreshSig$();\n\nimport React, { useMemo } from \"react\";\nimport MOCK_DATA from \"./dummy data/MOCK_DATA.json\";\nimport { useTable, useSortBy, useGlobalFilter } from \"react-table\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst COLUMNS = [{\n  Header: 'ID',\n  accessor: 'id'\n}, {\n  Header: 'First Name',\n  accessor: 'first_name'\n}, {\n  Header: 'Last Name',\n  accessor: 'last_name'\n}, {\n  Header: 'Email',\n  accessor: 'email'\n}];\n\nconst GlobalFilter = _ref => {\n  let {\n    filter,\n    setFilter\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"span\", {\n    children: [\"Search: \", ' ', /*#__PURE__*/_jsxDEV(\"input\", {\n      value: filter || '',\n      onChange: e => setFilter(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n};\n\n_c = GlobalFilter;\nexport default function DataTable() {\n  _s();\n\n  const columns = useMemo(() => COLUMNS, []);\n  const data = useMemo(() => MOCK_DATA, []);\n  const table = useTable({\n    columns,\n    data\n  }, useGlobalFilter, useSortBy);\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow,\n    state,\n    setGlobalFilter\n  } = table;\n  const {\n    globalFilter\n  } = state;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(GlobalFilter, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", { ...getTableProps(),\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: headerGroups.map(headerGroup => /*#__PURE__*/_jsxDEV(\"tr\", { ...headerGroup.getHeaderGroupProps(),\n          children: [headerGroup.headers.map(column => /*#__PURE__*/_jsxDEV(\"th\", { ...column.getHeaderProps(column.getSortByToggleProps()),\n            children: [column.render('Header'), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: column.isSorted ? column.isSortedDesc ? '˄' : '˅' : ''\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 37\n          }, this)), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", { ...getTableBodyProps(),\n        children: [rows.map(row => {\n          prepareRow(row);\n          return /*#__PURE__*/_jsxDEV(\"tr\", { ...row.getRowProps(),\n            children: [row.cells.map(cell => {\n              return /*#__PURE__*/_jsxDEV(\"td\", { ...cell.getCellProps(),\n                children: cell.render('Cell')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 48\n              }, this);\n            }), /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 29\n          }, this);\n        }), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_s(DataTable, \"ZnA/apEdCjMe4gBEXBLA1IwFxGI=\", false, function () {\n  return [useTable];\n});\n\n_c2 = DataTable;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"GlobalFilter\");\n$RefreshReg$(_c2, \"DataTable\");","map":{"version":3,"names":["React","useMemo","MOCK_DATA","useTable","useSortBy","useGlobalFilter","COLUMNS","Header","accessor","GlobalFilter","filter","setFilter","e","target","value","DataTable","columns","data","table","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","state","setGlobalFilter","globalFilter","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","getSortByToggleProps","render","isSorted","isSortedDesc","row","getRowProps","cells","cell","getCellProps"],"sources":["/Users/wesley.white/Library/CloudStorage/GoogleDrive-wesley.white@6point6.co.uk/My Drive/Notes/20 - Case Study/Files/Front End Dev Environment/dashboard/src/components/data table.js"],"sourcesContent":["import React, { useMemo } from \"react\";\nimport MOCK_DATA from \"./dummy data/MOCK_DATA.json\";\nimport { useTable, useSortBy, useGlobalFilter } from \"react-table\";\n\nconst COLUMNS = [\n    {\n        Header: 'ID',\n        accessor: 'id'\n    },\n    {\n        Header: 'First Name',\n        accessor: 'first_name'\n    },\n    {\n        Header: 'Last Name',\n        accessor: 'last_name'\n    },\n    {\n        Header: 'Email',\n        accessor: 'email'\n    }\n]\n\nconst GlobalFilter = ({ filter, setFilter }) => {\n    return (\n        <span>\n            Search: {' '}\n            <input value={filter || ''}\n            onChange={e => setFilter(e.target.value)} />\n        </span>\n    )\n}\n\nexport default function DataTable() {\n    \n    const columns = useMemo(() => COLUMNS, [])\n    const data = useMemo(() => MOCK_DATA, [])\n    \n    const table = useTable({\n        columns,\n        data\n    },\n    useGlobalFilter,\n    useSortBy)\n\n    const { getTableProps, getTableBodyProps, headerGroups, rows, prepareRow, state, setGlobalFilter } = table\n\n    const { globalFilter } = state\n\n    return (\n        <>\n        <GlobalFilter />\n        <table {...getTableProps()}>\n            <thead>\n                {\n                    headerGroups.map((headerGroup) => (                        \n                        <tr {...headerGroup.getHeaderGroupProps()}>\n                            {\n                                headerGroup.headers.map(column => (\n                                    <th {...column.getHeaderProps(column.getSortByToggleProps())}>\n                                        {column.render('Header')}\n                                        <span>\n                                            {column.isSorted ? (column.isSortedDesc ? '˄': '˅'):''}\n                                        </span>\n                                    </th>\n                                ))\n                            }\n                            <th>\n                                1\n                            </th>\n                        </tr>\n                    ))\n                }\n            </thead>\n            <tbody {...getTableBodyProps()}>\n                {\n                    rows.map(row => {\n                        prepareRow(row)\n                        return(\n                            <tr {...row.getRowProps()}>\n                                {\n                                    row.cells.map((cell) => {\n                                        return <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\n                                    })\n                                }\n                                <td></td>\n                            </tr>\n                        )\n                    })\n                }\n                <tr>\n                    <td>\n                    </td>\n                </tr>\n            </tbody>\n        </table>\n        </>\n    )\n}"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,OAAhB,QAA+B,OAA/B;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,SAASC,QAAT,EAAmBC,SAAnB,EAA8BC,eAA9B,QAAqD,aAArD;;;AAEA,MAAMC,OAAO,GAAG,CACZ;EACIC,MAAM,EAAE,IADZ;EAEIC,QAAQ,EAAE;AAFd,CADY,EAKZ;EACID,MAAM,EAAE,YADZ;EAEIC,QAAQ,EAAE;AAFd,CALY,EASZ;EACID,MAAM,EAAE,WADZ;EAEIC,QAAQ,EAAE;AAFd,CATY,EAaZ;EACID,MAAM,EAAE,OADZ;EAEIC,QAAQ,EAAE;AAFd,CAbY,CAAhB;;AAmBA,MAAMC,YAAY,GAAG,QAA2B;EAAA,IAA1B;IAAEC,MAAF;IAAUC;EAAV,CAA0B;EAC5C,oBACI;IAAA,uBACa,GADb,eAEI;MAAO,KAAK,EAAED,MAAM,IAAI,EAAxB;MACA,QAAQ,EAAEE,CAAC,IAAID,SAAS,CAACC,CAAC,CAACC,MAAF,CAASC,KAAV;IADxB;MAAA;MAAA;MAAA;IAAA,QAFJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAOH,CARD;;KAAML,Y;AAUN,eAAe,SAASM,SAAT,GAAqB;EAAA;;EAEhC,MAAMC,OAAO,GAAGf,OAAO,CAAC,MAAMK,OAAP,EAAgB,EAAhB,CAAvB;EACA,MAAMW,IAAI,GAAGhB,OAAO,CAAC,MAAMC,SAAP,EAAkB,EAAlB,CAApB;EAEA,MAAMgB,KAAK,GAAGf,QAAQ,CAAC;IACnBa,OADmB;IAEnBC;EAFmB,CAAD,EAItBZ,eAJsB,EAKtBD,SALsB,CAAtB;EAOA,MAAM;IAAEe,aAAF;IAAiBC,iBAAjB;IAAoCC,YAApC;IAAkDC,IAAlD;IAAwDC,UAAxD;IAAoEC,KAApE;IAA2EC;EAA3E,IAA+FP,KAArG;EAEA,MAAM;IAAEQ;EAAF,IAAmBF,KAAzB;EAEA,oBACI;IAAA,wBACA,QAAC,YAAD;MAAA;MAAA;MAAA;IAAA,QADA,eAEA,sBAAWL,aAAa,EAAxB;MAAA,wBACI;QAAA,UAEQE,YAAY,CAACM,GAAb,CAAkBC,WAAD,iBACb,mBAAQA,WAAW,CAACC,mBAAZ,EAAR;UAAA,WAEQD,WAAW,CAACE,OAAZ,CAAoBH,GAApB,CAAwBI,MAAM,iBAC1B,mBAAQA,MAAM,CAACC,cAAP,CAAsBD,MAAM,CAACE,oBAAP,EAAtB,CAAR;YAAA,WACKF,MAAM,CAACG,MAAP,CAAc,QAAd,CADL,eAEI;cAAA,UACKH,MAAM,CAACI,QAAP,GAAmBJ,MAAM,CAACK,YAAP,GAAsB,GAAtB,GAA2B,GAA9C,GAAmD;YADxD;cAAA;cAAA;cAAA;YAAA,QAFJ;UAAA;YAAA;YAAA;YAAA;UAAA,QADJ,CAFR,eAWI;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAXJ;QAAA;UAAA;UAAA;UAAA;QAAA,QADJ;MAFR;QAAA;QAAA;QAAA;MAAA,QADJ,eAsBI,sBAAWhB,iBAAiB,EAA5B;QAAA,WAEQE,IAAI,CAACK,GAAL,CAASU,GAAG,IAAI;UACZd,UAAU,CAACc,GAAD,CAAV;UACA,oBACI,mBAAQA,GAAG,CAACC,WAAJ,EAAR;YAAA,WAEQD,GAAG,CAACE,KAAJ,CAAUZ,GAAV,CAAea,IAAD,IAAU;cACpB,oBAAO,mBAAQA,IAAI,CAACC,YAAL,EAAR;gBAAA,UAA8BD,IAAI,CAACN,MAAL,CAAY,MAAZ;cAA9B;gBAAA;gBAAA;gBAAA;cAAA,QAAP;YACH,CAFD,CAFR,eAMI;cAAA;cAAA;cAAA;YAAA,QANJ;UAAA;YAAA;YAAA;YAAA;UAAA,QADJ;QAUH,CAZD,CAFR,eAgBI;UAAA,uBACI;YAAA;YAAA;YAAA;UAAA;QADJ;UAAA;UAAA;UAAA;QAAA,QAhBJ;MAAA;QAAA;QAAA;QAAA;MAAA,QAtBJ;IAAA;MAAA;MAAA;MAAA;IAAA,QAFA;EAAA,gBADJ;AAiDH;;GAjEuBnB,S;UAKNZ,Q;;;MALMY,S"},"metadata":{},"sourceType":"module"}